name: Publish and Release 

on:
  workflow_dispatch:
  push:
    tags:
    - v*

jobs:
  publish_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
      - uses: actions/checkout@v3
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3
        timeout-minutes: 5
        continue-on-error: true
      - name: Publish
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          crates=(
            "fil_actors_shared"
            "fil_actor_verifreg_state"
            "fil_actor_account_state"
            "fil_actor_cron_state"
            "fil_actor_datacap_state"
            "fil_actor_eam_state"
            "fil_actor_ethaccount_state"
            "fil_actor_evm_shared_state"
            "fil_actor_evm_state"
            "fil_actor_init_state"
            "fil_actor_market_state"
            "fil_actor_miner_state"
            "fil_actor_multisig_state"
            "fil_actor_paych_state"
            "fil_actor_power_state"
            "fil_actor_reward_state"
            "fil_actor_system_state"
            "fil_actor_interface"
          )

          for crate in "${crates[@]}"; do
            crate_manifest=$(cargo metadata --no-deps --format-version 1 |
              jq -r --arg crate "$crate" '.packages[] |
              select(.manifest_path | contains($crate)) |
              .manifest_path')

            cargo publish --manifest-path $crate --token $CRATES_IO_TOKEN
          done
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release notes for version ${{ github.ref }}:
          prerelease: true

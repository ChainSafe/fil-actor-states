name: Tests

on: [pull_request]

jobs:
  test:
    name: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Apt Dependencies
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: |
            sudo make install-deps
      - name: Setup sccache
        uses: hanabi1224/sccache-action@v1.2.0
        timeout-minutes: 5
        continue-on-error: true
        with:
          release-name: v0.3.3
          cache-key: ${{ runner.os }}-sccache-tests-${{ hashFiles('rust-toolchain.toml') }}
          cache-update: ${{ github.event_name != 'pull_request' }}
      - name: Build
        run: cargo check --workspace
        env:
          CC: "sccache clang"
          CXX: "sccache clang++"
      - name: Run tests
        run: cargo test --workspace
        env:
          CC: "sccache clang"
          CXX: "sccache clang++"

  lint-all:
    name: All lint checks (lint audit spellcheck udeps)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Apt Dependencies
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: |
            sudo make install-deps
            sudo apt-get install -y libclang-dev # required dep for cargo-spellcheck
      - uses: hanabi1224/cache-cargo-bin-action@v1.0.0
      - name: Install Lint tools
        run: make install-lint-tools
        env:
          RUSTFLAGS: "-Cstrip=symbols"
      - name: Setup sccache
        uses: hanabi1224/sccache-action@v1.2.0
        timeout-minutes: 5
        continue-on-error: true
        with:
          release-name: v0.3.3
          cache-key: ${{ runner.os }}-sccache-lints-${{ hashFiles('rust-toolchain.toml') }}
          cache-update: ${{ github.event_name != 'pull_request' }}
      - run: make lint-all
        env:
          CC: "sccache clang"
          CXX: "sccache clang++"

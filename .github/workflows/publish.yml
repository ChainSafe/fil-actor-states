name: Publish Crates

on:
  workflow_dispatch:
  push:
    tags:
      - v*

env:
  RUSTC_WRAPPER: "sccache"

jobs:
  publish-shared:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.5
        timeout-minutes: 5
        continue-on-error: true
        env:
          SCCACHE_GHA_ENABLED: "true"
      - name: Publish shared crate
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --package fil_actors_shared --token "$CRATES_IO_TOKEN"
      - name: Clear artifacts
        run: cargo clean

  publish-independent:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [
          "fil_actor_account_state",
          "fil_actor_cron_state",
          "fil_actor_eam_state",
          "fil_actor_ethaccount_state"
        ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.5
        timeout-minutes: 5
        continue-on-error: true
        env:
          SCCACHE_GHA_ENABLED: "true"
      - name: Publish independent crate
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --package ${{ matrix.crate }} --token "$CRATES_IO_TOKEN"
      - name: Clear artifacts
        run: cargo clean

  publish-dependent-on-shared:
    runs-on: ubuntu-latest
    needs: publish-shared
    strategy:
      matrix:
        crate: [
          "fil_actor_datacap_state",
          "fil_actor_evm_state",
          "fil_actor_init_state",
          "fil_actor_multisig_state",
          "fil_actor_paych_state",
          "fil_actor_power_state",
          "fil_actor_system_state"
        ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.5
        timeout-minutes: 5
        continue-on-error: true
        env:
          SCCACHE_GHA_ENABLED: "true"
      - name: Publish dependent crate
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --package ${{ matrix.crate }} --token "$CRATES_IO_TOKEN"
      - name: Clear artifacts
        run: cargo clean

  publish-verifreg:
    runs-on: ubuntu-latest
    needs: publish-shared
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.5
        timeout-minutes: 5
        continue-on-error: true
        env:
          SCCACHE_GHA_ENABLED: "true"
      - name: Publish verifreg crate
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --package fil_actor_verifreg_state --token "$CRATES_IO_TOKEN"
      - name: Clear artifacts
        run: cargo clean

  publish-market-and-miner:
    runs-on: ubuntu-latest
    needs: publish-verifreg
    strategy:
      matrix:
        crate: [
          "fil_actor_market_state",
          "fil_actor_miner_state"
        ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.5
        timeout-minutes: 5
        continue-on-error: true
        env:
          SCCACHE_GHA_ENABLED: "true"
      - name: Publish market and miner crates
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --package ${{ matrix.crate }} --token "$CRATES_IO_TOKEN"
      - name: Clear artifacts
        run: cargo clean

  publish-reward:
    runs-on: ubuntu-latest
    needs: publish-market-and-miner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.5
        timeout-minutes: 5
        continue-on-error: true
        env:
          SCCACHE_GHA_ENABLED: "true"
      - name: Publish reward crate
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --package fil_actor_reward_state --token "$CRATES_IO_TOKEN"
      - name: Clear artifacts
        run: cargo clean

  publish-interface:
    runs-on: ubuntu-latest
    needs: [publish-independent, publish-dependent-on-shared, publish-reward]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.5
        timeout-minutes: 5
        continue-on-error: true
        env:
          SCCACHE_GHA_ENABLED: "true"
      - name: Publish interface crate
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --package fil_actor_interface --token "$CRATES_IO_TOKEN"
      - name: Clear artifacts
        run: cargo clean
